# Generated by Django 4.1.5 on 2023-02-20 12:37

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=120)),
                ('email', models.EmailField(max_length=120, unique=True)),
                ('phone', models.CharField(max_length=120)),
                ('password', models.CharField(max_length=120)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Ulanyjy',
                'verbose_name_plural': 'Ulanyjylar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VideoEdit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='media/', verbose_name='Surat')),
                ('title', models.CharField(max_length=250, verbose_name='Wideonyň ady')),
                ('video', models.FileField(upload_to='video', verbose_name='Wideo webinar')),
            ],
            options={
                'verbose_name': 'Wideo',
                'verbose_name_plural': 'Wideo',
            },
        ),
        migrations.CreateModel(
            name='ControlVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doly_wagty', models.CharField(max_length=200)),
                ('gorulen_aralayk', models.CharField(max_length=200)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Ulanyjy', to=settings.AUTH_USER_MODEL)),
                ('video_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wideo', to='apps.videoedit')),
            ],
            options={
                'verbose_name': 'Wideony görenler',
                'verbose_name_plural': 'Wideony görenler',
            },
        ),
    ]
